{{define "object"}}package {{.GoPackage}}
{{$obj := .}}
{{$relation := $obj.Relation}}
{{$primaryField := $obj.PrimaryField}}
import (
	"fmt"
	"time"
	"strings"
	"database/sql"
	"github.com/ezbuy/redis-orm/orm"
	{{- if $obj.DbContains "redis"}}
	redis "gopkg.in/redis.v5"
	{{- end}}
)
var (
	_ sql.DB
	_ time.Time
	_ fmt.Formatter
	_ strings.Reader
	_ orm.VSet
)

{{if not $relation}}	
	{{if eq $obj.Db "mysql"}}
		type {{.Name}} struct {
			{{- range $field := .Fields}}
			{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}} 
			{{- end}}
		}
	{{end}}

	{{if eq $obj.Db "mssql"}}
		type {{.Name}} struct {
			{{- range $field := .Fields}}
			{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}} 
			{{- end}}
		}
	{{end}}

	{{if eq $obj.Db "redis"}}
		type {{.Name}} struct {
			{{- range $field := .Fields}}
			{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}} 
			{{- end}}
		}
	{{end}}

	{{if eq $obj.Db "mongo"}}
		type {{.Name}} struct {
			ID 	bson.ObjectId `bson:"_id,omitempty" json:"id"`
			{{- range $field := .Fields}}
			{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}} 
			{{- end}}
		}
	{{end}}

	{{if eq $obj.Db "elastic"}}
		type {{.Name}} struct {
			{{- range $field := .Fields}}
			{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}} 
			{{- end}}
		}
	{{end}}

	//! object function
	{{template "object.functions" $obj}}
	//! uniques
	{{- range $i, $unique := $obj.Uniques}}
	{{template "object.unique" $unique}}
	{{- end}}

	//! indexes
	{{- range $i, $index := $obj.Indexes}}
	{{template "object.index" $index}}
	{{- end}}

	//! ranges
	{{- range $i, $rg := $obj.Ranges}}
	{{template "object.range" $rg}}
	{{- end}}

	//! orders
	{{- range $i, $order := $obj.Orders}}
	{{template "object.order.by" $order}}
	{{- end}}

	{{- if $obj.DbContains "mysql"}}
	{{template "object.mysql" $obj}}
	{{- end}}

	{{- if $obj.DbContains "mssql"}}
	{{template "object.mssql" $obj}}
	{{- end}}

	{{- if $obj.DbContains "redis"}}
	{{template "object.redis" $obj}}
	{{- end}}

	{{- if $obj.DbContains "mongo"}}
	{{template "object.mongo" $obj}}
	{{- end}}

	{{- if $obj.DbContains "elastic"}}
	{{template "object.elastic" $obj}}
	{{- end}}	
{{end}}


{{end}}

